<?php
/**
 * @file
 * Enabling Bitcoin payments via jeeb.io
 */


require_once("jeeb_lib.php");
require_once("uc_jeeb.pages.inc");

define ('JEEB_WEBSITE', "https://jeeb.io");
define ('JEEB_SMALL_LOGO_FILE', "/img/email-logo-n.png");
define ('BITCOIN_JEEB_ACCEPTED_LOGO_FILE', "/bitcoin-accepted.png");
define ('BITCOIN_JEEB_ACCEPTED_LOGO_PATH', base_path() . drupal_get_path('module', 'uc_jeeb') . BITCOIN_JEEB_ACCEPTED_LOGO_FILE);
define ('JEEB_NOTIFY_URL', "uc_jeeb/notifications");
define ('JEEB_INVOICE_EXPIRATION_TIME', "15");

/**
 * Settings form for the Jeeb payment method module.
 * Not directly hooked into by Ubercart; called by
 * uc_payment_method_jeeb()
 *
 * @return array
 */
function uc_jeeb_settings_form()
{
    global $base_url;

    $form          = array();
    $form['admin'] = array(
        '#type'        => 'fieldset',
        '#title'       => t('Administrator settings'),
        '#collapsible' => TRUE,
        '#collapsed'   => TRUE,
    );
    $form['admin']['uc_jeeb_current_api_key'] = array(
        '#type'          => 'textfield',
        '#title'         => t('Current Jeeb API key'),
        '#default_value' => variable_get('uc_jeeb_current_api_key', 'Please enter your signature'),
        '#description'   => t('Your current Jeeb API key should be entered here. This key must be kept private. To view or edit your API keys, please go to your merchant account at') . ' <a href="' . JEEB_WEBSITE . '" target="_blank">' . t("Jeeb's website") . '</a>.',
    );
    $form['admin']['uc_jeeb_debug_mode'] = array(
        '#type'    => 'radios',
        '#title'   => t('Live / Testing Environment'),
        '#options' => array(
            0 => t('Go live with Jeeb Gateway for bitcoin payment.'),
            1 => t('Connect to test server for testing and debugging purposes.')
        ),
        '#default_value' => variable_get('uc_jeeb_debug_mode', 0),
        '#description'   => '<p><b>'.t('NOTE: THE MINIMUM PRICE OF THE PRODUCT SHOULD BE 10000 IRR, NOT LESS THAN THAT.').'</p></b>',
    );

    return $form;
}

/**
 * Implements hook_menu().
 *
 * @return array
 */
function uc_jeeb_menu()
{
    // Always accessible, accepts POST data from Jeeb's servers
    // when being notified of status changes to an invoice.
    $items = array();
    $items["uc_jeeb/notification"] = array(
        'title'           => 'Jeeb Notifications',
        'access callback' => TRUE,
        'page callback'   => 'uc_jeeb_notification',
        'type'            => MENU_CALLBACK,
        'file'            => 'uc_jeeb.pages.inc',
    );
    $items["cart/uc_jeeb/callback"] = array(
        'title'           => 'Jeeb Callback',
        'access callback' => TRUE,
        'page callback'   => 'uc_jeeb_callback',
        'type'            => MENU_CALLBACK,
        'file'            => 'uc_jeeb.pages.inc',
    );

    return $items;
}


/**
 * Display help and module information
 * @param path which path of the site we're displaying help
 * @param arg array that holds the current path as would be returned from arg() function
 * @return help text for the path
 */
function uc_jeeb_help($path, $arg)
{
    $o = '';  // declare your output variable
    switch ($path)
    {
    case "admin/help#jeeb":
        $o .= '<p>' . t('Implements the acceptance of bitcoin payments through the') . " jeeb.io " . t('API.') . '</p>';
        break;
    }
    return $o;
} // end function - uc_jeeb_help


/**
 * Implements hook_uc_payment_method().
 *
 * @return array
 */
function uc_jeeb_payment_method()
{
    // only show it if we aren't in debug mode, or are an admin
    if ((!variable_get('uc_jeeb_debug_mode', 0) ||
        user_access('access administration menu')))
    {
        $title = '<img src="' . BITCOIN_JEEB_ACCEPTED_LOGO_PATH .
            '" style="position:relative; top:5px; margin-right:6px;" />' .
            t('Jeeb - pay with Bitcoins via Jeeb.');

        $methods[] = array(
            'id'         => 'jeeb',
            'name'       => t('jeeb'),
            'title'      => $title,
            'review'     => t('Bitcoin via Jeeb'),
            'desc'       => t('Make a payment using bitcoins.'),
            'callback'   => 'uc_payment_method_jeeb',
            'weight'     => 4,
            'checkout'   => FALSE,
            'no_gateway' => TRUE,
        );

        return $methods;

    }
    else
    {
        return array();
    }
}

/**
 * Payment method callback for the Jeeb payment method
 *
 * @param $op
 * @param $order
 */
function uc_payment_method_jeeb($op, &$order)
{
  global $base_url;
  global $user;
    switch ($op)
    {
    case 'settings':
        return uc_jeeb_settings_form();
        break;

    case 'cart-details':
        $txt = t('After you click review order, You will be redirected to Jeeb\'s Payment Gateway where you can pay your Invoice');
        $details = $txt;
        return $details;
        break;
    case 'cart-review':
        jeeb_log("Entered Cart-Review");
        $url = variable_get('uc_jeeb_debug_mode') ? "http://test.jeeb.io:9876/" : "https://jeeb.io/" ;
        $amount = uc_order_get_total($order);
        $signature = variable_get('uc_jeeb_current_api_key');

        $btc = convertIrrToBtc($url, $amount, $signature);
        jeeb_log("Url:".$url." Bitcoin:".$btc." Signature:".$signature);
        $url = variable_get('uc_jeeb_debug_mode') ? "http://test.jeeb.io:9876/" : "https://jeeb.io/" ;
        // $btc = db_query("SELECT btc FROM {uc_payment_jeeb} WHERE order_id = :order_id", array(':order_id' => $order->order_id))->fetchField();
        // $notification = $base_url . '/' . JEEB_NOTIFY_URL;
        jeeb_log("Url:".$url." Bitcoin:".$btc." Notification Url:".url('uc_jeeb/notification/',array('absolute' => TRUE)).' callback Url:'. $base_url .'/'. '?q=user/' .$user->uid.'/orders');
        $params = array(
          'orderNo'          => $order->order_id,
          'requestAmount'    => $btc,
          'notificationUrl'  => url('uc_jeeb/notification/',array('absolute' => TRUE)),
          'callBackUrl'       => url('cart/uc_jeeb/callback/',array('absolute' => TRUE)),
          // 'callBackUrl'       => $base_url.'/'. '?q=user/' .$user->uid.'/orders',
          'allowReject'      => variable_get('uc_jeeb_debug_mode') ? false : True
        );

        $result = createInvoice($url, $amount, $params, $signature);
        jeeb_log("Token:".$result['token']." Reference No:".$result['referenceNo']);
        $id = db_result(db_query("SELECT order_id FROM {uc_payment_jeeb} WHERE order_id = %d", $order->order_id));
        if ($id==$order->order_id){
          db_query("UPDATE {uc_payment_jeeb} SET btc = %f, reference_no = '%s', token = '%s' WHERE order_id = &d", $btc, $result['referenceNo'], $result['token'], $order->order_id);
        }
        else{
        db_query("INSERT INTO {uc_payment_jeeb} (order_id, btc, reference_no, token) VALUES (%d, %f, '%s', '%s')", $order->order_id, $btc, $result['referenceNo'], $result['token']);
        }

        echo redirectPayment($url, $result['token']);

        $review[] = t('Payable Bitcoins :') . $btc.'<br />'.t('Please click on submit order.'.
        'You will be redirected to Jeeb\'s Payment Gateway where you can pay your Invoice'.'<br />'.
        'NOTE: You will only get 15 mins to submit your order and Pay the Invoice.');
        return $review;
        break;
    case 'order-submit':
    case 'customer-view':
        break;
    }
} // end function - uc_payment_method_jeeb

function uc_bitpay_order($op, $arg1, $arg2)
{
	global $base_url;

	// check for order 'save' even if payment method isn't 'bitpay';
	// they may have changed it from 'bitpay', so if they're saving,
	// and we find a bitcoin handling fee line item, we should remove it
    if ($op == 'save')
    {
        foreach($arg1->line_items as $k => $line_item)
        {
            if($line_item['type'] == 'uc_bitpay_fee')
            {
				unset($arg1->line_items[$k]);
				db_query('DELETE FROM {uc_order_line_items} WHERE order_id = %d AND type = "%s"', $arg1->order_id, 'uc_bitpay_fee');
			}
		}
	}

	if (($arg1->payment_method == 'jeeb') &&
	(!variable_get('uc_jeeb_debug_mode', 0) ||
    user_access('access administration menu')))
    {
        switch ($op)
        {
			case 'new':
			case 'save':
			case 'total':
			case 'submit':
		} // end switch - check for order action taken
	} // end if - check to make sure payment method is 'jeeb', etc.

} // end function - uc_jeeb_order
